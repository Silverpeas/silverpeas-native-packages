#!/bin/sh

case "$1" in
    configure)
      if ! id silverpeas > /dev/null 2>&1 ; then
        echo "Create the user silverpeas..."
        useradd -d /opt/silverpeas -r -s /bin/bash silverpeas
        chown -R silverpeas:silverpeas /opt/silverpeas
      fi
      restart=0
      echo "Check maximum shared memory for PostgreSQL..."
      shmmax=`cat /proc/sys/kernel/shmmax`
      if [ $shmmax -lt 134217728 ]; then
        grep kernel.shmmax /etc/sysctl.conf > /dev/null 2>&1
        if [ $? -eq 0 ]; then
          sed 's/kernel.shmmax.*/kernel.shmmax = 134217728/g' /etc/sysctl.conf > /etc/sysctl.conf.new
          cp /etc/sysctl.conf /etc/sysctl.conf.prev
          mv /etc/sysctl.conf.new /etc/sysctl.conf
        else
          echo 'kernel.shmmax = 134217728' >> /etc/sysctl.conf
        fi
        restart=1
        /sbin/sysctl -p /etc/sysctl.conf
      fi

      hba_path=`find /etc/postgresql -name pg_hba.conf`
      echo "PostgreSQL securing..."
      cp $hba_path $hba_path.save
      grep "^host[ \t]*all[ \t]*all[ \t]*127.0.0.1\/32[ \t]*ident\|^host[ \t]*all[ \t]*all[ \t]*127.0.0.1/32[ \t]*trust" $hba_path > /dev/null
      if [ $? -eq 0 ]; then
        # remove the permission for all with an ident or a trust credential
        sed "s/^host[ \t]*all[ \t]*all[ \t]*[(127.0.0.1\/32)(::1\/128)]*[ \t]*[(ident)(trust)]*//" $hba_path > /tmp/pg_hba.conf
        sudo -u postgres cp /tmp/pg_hba.conf $hba_path
        rm -f /tmp/pg_hba.conf > /dev/null 2>&1 || true
        chown postgres:postgres $hba_path
        restart=1
      fi
      grep "silverpeas" $hba_path > /dev/null
      if [ $? -ne 0 ]; then
        # add connection permission for the user silverpeas
        echo "Privileges adding for Silverpeas to access PostgreSQL server..."
        cat >> $hba_path << EOF
host    silverpeas             silverpeas             127.0.0.1/32            md5
host    silverpeas             silverpeas             ::1/128                 md5
EOF
        chown postgres:postgres $hba_path
        restart=1
      fi

      test $restart -eq 1 && service postgresql restart
      sudo -u postgres psql -c 'select * from pg_user' | grep silverpeas > /dev/null
      if [ $? -ne 0 ]; then
        echo "Database and user creation for Silverpeas..."
        SILVER_PWD=`echo $RANDOM | sha1sum | sed "s| -||g" | tr -d " "`
        echo "CREATE USER silverpeas WITH PASSWORD :silver_pwd; CREATE DATABASE silverpeas; GRANT ALL PRIVILEGES ON DATABASE silverpeas TO silverpeas;"  | sudo -u postgres psql -l -v silver_pwd="'$SILVER_PWD'" -f - 
        if [ -f /opt/silverpeas/setup/settings/config.properties ]; then
          sed "s/^DB_SERVERTYPE=.*/DB_SERVERTYPE=POSTGRES/g" /opt/silverpeas/setup/settings/config.properties > /tmp/config.properties && mv /tmp/config.properties /opt/silverpeas/setup/settings/config.properties
          sed "s/^DB_SERVER=.*/DB_SERVER=localhost/g" /opt/silverpeas/setup/settings/config.properties > /tmp/config.properties && mv /tmp/config.properties /opt/silverpeas/setup/settings/config.properties
          sed "s/^DB_NAME=.*/DB_NAME=silverpeas/g" /opt/silverpeas/setup/settings/config.properties > /tmp/config.properties && mv /tmp/config.properties /opt/silverpeas/setup/settings/config.properties
          sed "s/^DB_USER=.*/DB_USER=silverpeas/g" /opt/silverpeas/setup/settings/config.properties > /tmp/config.properties && mv /tmp/config.properties /opt/silverpeas/setup/settings/config.properties
          sed "s/^DB_PASSWD=.*/DB_PASSWD=$SILVER_PWD/g" /opt/silverpeas/setup/settings/config.properties > /tmp/config.properties && mv /tmp/config.properties /opt/silverpeas/setup/settings/config.properties
          chown silverpeas:silverpeas /opt/silverpeas/setup/settings/config.properties
          rm /opt/silverpeas/setup/settings/config-datasource.properties
        else
          sed "s/^DB_PASSWD=.*/DB_PASSWD=$SILVER_PWD/g" /opt/silverpeas/setup/settings/config-datasource.properties > /tmp/config-datasource.properties && mv /tmp/config-datasource.properties /opt/silverpeas/setup/settings/config-datasource.properties
        fi
      fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
